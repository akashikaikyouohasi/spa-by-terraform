name: terraform apply by OIDC

on: 
  pull_request:
    branches:
      - main
    types: [closed]

permissions:
  id-token: write
  contents: read # actions/checkout のために必要

env:
  TERRAFORM_DIRECTORY: ./terraform
  REACT_DEPLOY_DIRECTORY: ./react
  ORIGIN_CONTENTS_DIRECTORY: ./origin_contents

jobs:
  get-caller-identity:
    name: OIDC test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8

      - name: Terraform fmt
        id: fmt
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform apply -auto-approve
      
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.1

      - name: Install dependencies
        id: init_node
        working-directory: ${{ env.REACT_DEPLOY_DIRECTORY }}
        run: npm install

      - name: Build react
        id: build
        working-directory: ${{ env.REACT_DEPLOY_DIRECTORY }}
        run: npm run build

      - name: Deploy react
        id: deploy
        working-directory: ${{ env.ORIGIN_CONTENTS_DIRECTORY }}
        run: aws s3 sync . s3://dev-react-tutorial-20220129/

      - name: Delete CloudFront cache
        id: delete_cache
        run: aws cloudfront create-invalidation --distribution-id E9RO44VHBK46Q --paths "/*"



